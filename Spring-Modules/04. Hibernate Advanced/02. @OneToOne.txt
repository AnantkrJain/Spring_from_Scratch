An instructor can have an "instructor detail" entity similar to "instructor profile".
For Uni-directional:

	Development Process -
		1.	Prep Work - Define database tables
		2.	Create InstructorDetail Class
		3. 	Create Instructor Class
		4.	Create Main App
				Create the objects
				Associate the objects
				Start a transaction
				Commit the transaction
		
	Foreign Key -
		
		1.	'CONSTRAINT' and 'REFERENCE' are the keywords used to set up the foreign key relationship.
		2.	Main purpose is to preserve relationship between tables.
		3.	Referential Integrity - Prevents operations that would destroy relationship.
		4.	Ensures only valid data is inserted into the foreign key column
				Can only contain valid reference to primary key in other table.
				
	Entity Lifecycle -
		
		Operations		Description
		
		Detach			If entity is detached, it is not associated with a Hibernate session
		Merge 			If instance is detached from session, the merge will reattach to session
		Persist 		Transitions new instance to managed state. Next flush/commit wil save in db
		Remove 			Transitions managed entity to be removed. Next flush/commit will delete from db
		Refresh 		Reload/sync object with data from db. Prevents stale data.
	
	Cascade Types -
	
		Cascade Type 	Description
		
		PERSISRT		If entity is persisted/saved, then related entity will also be persisted/saved.
		REMOVE			If entity is removed/deleted, related entity will also be deleted
		REFRESH 		If entity is refreshed, related entity will also be refreshed
		DETACH			If entity is detached (not associated with session), then related entity will also be detached
		MERGE			If entity is merged, then related entity will also be merged
		ALL				All of above cascade types
		
		# Bydefault no operations are cascaded.
		# You can configure multiple cascade types.
		
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Bi-directional :-

	For bi-directional mapping, there is no need to change in the database schema.
	Run the database scripts to create the tables.

	All the sql scripts are in 'D:\U-Learning\SPRING_AND_HIBERNATE\Git-Source-Code-for-Course\03-hibernate-5\hibernate-mapping-database-scripts\' folder. Simply update the Java code.
	
	Development Process -
	
	1.	Make updates to InstructorDetail class
		1.	Add new field to reference Instructor
		2.	Add getter/setter methods for Instructor
		3.	Add @OneToOne annotations
		
	2.	Create Main App
	
	mappedBy tells Hibernate -
		looked at the instructorDetail property in the 'Instructor' class
		Use information from the Instructor class @JoinColumn
		To help find associated Instructor
		
		
	#If we don't close the connection, we get error for next run as "1 unclosed connections upon shutting down the pool". For no more leaking, session.close() is required.
	
	#If id doesn't exist which we are trying to findout in database, then we will get as nullPointerException.
	
	#Only after removing cascade type REMOVE, if you try to delete, you will get an error "mapManagedFlushFailure"
	
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	