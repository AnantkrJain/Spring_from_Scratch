Spring REST Controller :-

	REST over HTTP -
		
		Most common use of REST is over HTTP.
		Leverage HTTP methods for CRUD operations.
		
		HTTP Method			CRUD Operation
		
		POST				Create a new entity
		GET					Read a list of entities or single entity
		PUT 				Update an existing entity
		DELETE				Delete an existing entity
		
		CLIENT								SERVER
		
					HTTP Request Message
		My CRM App ---------------------->	CRM REST Service
				   <---------------------
					HTTP Response Message

	HTTP Request Message has 3 parts -
		1.	Request Line - the HTTP command
		2.	Header variables - request metadata
		3.	Message body - content of message
		
	HTTP Response Message has 3 parts -
		1.	Response Line - server protocol and status code
		2.	Header variables - response metadata
		3.	Message body - content of message
		
		HTTP Response Status Codes -
			
			Code Range				Description
			
			100-199					Informational
			200-299					Successful
			300-399					Redirectional
			400-499					Client error
				401						Authentication Required
				404						File Not Found
			500-599					Server error
				500						Internal Server Error
				
		MIME Content Types -
		
			The message format is described by MIME content type
				Multipurpose Internet Mail-Extension
				
			Basic Syntax: type/sub-type
			
			Examples -
				text/html, text/plain
				application/json, application/xml
				
	Install REST Client -
	
		Postman - www.getpostman.com
		
		www.jsontest.com - Provides a collection of backend REST services to test against.
		
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Spring REST Support :-

	1.	Spring Web MVC provides support for Spring REST.

	2.	New annotation @RestController
			Extension of @Controller
			Handles REST requests and responses
	
	3.	Spring REST will also automatically convert Java POJOs to JSON
			As long as the Jackson project is on the classpath or pom.xml
			
	Web Browser vs Postman -
	
		For simple REST testing for GET requests
			Web Browser and Postman are simiilar
			
		However, for advanced REST testing: POST, PUT etc..
			Postman has much better support
			POSTing JSON data, setting content type
			Passing HTTP request headers, authentication etc..
			
	Development Process :-
	
		1.	Add Maven dependency for Spring MVC and Jackson project
		2.	Add code for all Java config: @Configuration
		3.	Add code for all Java config: Servlet Initializer
		4.	Create Spring REST Service using @RestController
		
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		
Retrieve POJO as JSON :-

	Our REST Service will return List<Student>.
		GET		/api/students		Returns a list of students
	Need to convert List<Student> to JSON.
	

Path Varaibles :-

	Retrieve a single student by id
		GET		/api/students/{studentId}	Retrive a single student

	Development Process -
	
		Add request mapping to Spring REST Service
			Bind path variable to method parameter using @PathVariable
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


	
		

















		
		
		
		
		
		
		
		
		
		